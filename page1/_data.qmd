
```{ojs}
max_length = d3.max(
  sommets.features.map(d=>d.properties.longueur)
)

max_denivelation = d3.max(
  sommets.features.map(d=>d.properties.denivellation)
)

max_slope = d3.max(
  sommets.features.map(d=>d.properties.percent_moyen)
)
```

```{ojs}
categories = unique(sommets.features.map(d => d.properties.category))
```

```{ojs}
massifs = unique(sommets.features.map(d => d.properties.massif))
```



```{ojs}
selectedRoute = d3.json(`https://minio.lab.sspcloud.fr/lgaliana/cyclisme/data/geojson/split/${selectedClimb.id}.geojson`)
```


```{ojs}
details_altitude = selectedRoute.features[0].geometry.coordinates.map((coord, index) => {
  return { index: index, altitude: coord[2]}
});
```

```{ojs}
printed_points = {
  let printed_points;
  if (mode === "explorer") {
      printed_points = geo.filter(sommets, (d) => filter_active_width(d, filter_choice));
  } else {
      const searchIds = search.map(s => s.id);
      printed_points = geo.filter(sommets, (d) => searchIds.includes(d.id));
      if (width < 400) {
        console.log(printed_points)
        printed_points = geo.properties.head({
          x: printed_points, // a geojson
          field: "nom", // a colname (string)
          nb: 100 // default:10. Number of features to get. 
        })
      }

  }
  return printed_points
}
```