---
echo: false
output: false
---

{{< include /common/_data.qmd >}}
{{< include /common/_globals.qmd >}}
{{< include /common/_inputs.qmd >}}
{{< include /common/_labels.qmd >}}
{{< include /common/_leaflet_functions.qmd >}}

{{< include /page1/_data.qmd >}}
{{< include /page1/_globals.qmd >}}
{{< include /page1/_inputs.qmd >}}



<!------------------------
First block: mode & lang
------------------------->

```{ojs}
//| output: true
//| label: head-page
html
`
<div class="lang-selector">${viewof lang}</div>
<div class="container">
  <div class="mode-selector">${viewof mode}</div>
<div/>
`
```


<!------------------------
Second block: filters or search
------------------------->


```{ojs}
//| label: input-selector-definition
selectors = {
  let selectors ;

  if (mode == "explorer"){
    selectors = html
    `
    <div class="container">
      <div class="select-container">
        <div>${viewof filter_choice}</div>
        <div class="visible-widget">${widget_to_print}</div>
      </div>
    </div>
    `
    return selectors
  }

  selectors = html`<div class="search-widget">${viewof search}</div>`
  return selectors
}
```


```{ojs}
//| output: true
//| label: input-selector
html`${selectors}`
```



<!------------------------
Main block
- Left: leaflet map
- Right: ascent characteristics
------------------------->

```{ojs}
//| output: true
(width > 400) ?
  html`
  <div class="main-container">
    <div id = "leafletmap" style="width: 40%;">${leafletmap}</div>
    <div class="column spacer" style="width: 2%;">
        <!-- Spacer column -->
    </div>
    <div style="width: 58%;">
      <div id="available-ascent">
      <div><i>${finding_ascent_label}</i></div>
      <br>
      ${table_selected}
      <br>
      </div>
    <div id="statsElement"><i>${no_ascent_label}</i></div>
    </div>
  </div>
  ` :
  html`
    <div id = "leafletmap" style="width: 100%;">${leafletmap}</div>
    <div style="width: 100%;">
      <div id="available-ascent">
      <div><i>${finding_ascent_label}</i></div>
      <br>
      ${table_selected}
      <br>
      </div>
    <div id="statsElement"><i>${no_ascent_label}</i></div>
    </div>
  `
```



```{ojs}
leafletmap = {

  // Create a container element for leaflet map
  let parent = DOM.element('div', { style: `width:${mapWidth}px;height:${mapHeight}px` });
  yield parent;
  var map = L.map(parent).setView([0, 0], 5);

  // Add the layer control to the map
  let baseLayers = availableLayers(L, map) ;
  L.control.layers(baseLayers).addTo(map);


  // Define a function that will be called for each feature in your GeoJSON layer
  function popEventSummit(feature, layer) {

      // Add mouseover event listener
      layer.on('mouseover', function() {
        const tooltipMessage = tooltipSummit(feature) ;
        layer.bindTooltip(
          tooltipMessage, {permanent: false, direction: "auto"}
          ).openTooltip();
      });

      // Create popup for ascent summit
      layer.bindPopup(
        popUpSummit(feature, lang)
      );

     layer.on({
       click: whenClicked, //callback functions
     });
      
      // Existing event listener for popup opens
      layer.on('popupopen', function() {
        const statsElement = document.getElementById('statsElement');
        const availableAscents = document.getElementById('available-ascent');        
        
        // Update the content of 'statsElement' with the desired statistics from 'feature.properties'
        statsElement.innerHTML = container_ascent(feature, lang, width) ;
        availableAscents.innerHTML = "" ;

        // Fetch route for selected ascent
        fetchAndDisplayAscentRoute(map, feature, 'red');
      });

  }
  
    var geojsonLayer = L.geoJson(printed_points, {
      onEachFeature: popEventSummit,
      pointToLayer: function(feature, coordinates) {
        return createIcon(feature, coordinates)        
      }
    }).addTo(map);
  
    geojsonLayer.setStyle({
      color: 'red',
      weight: 5
  });

  
    map.fitBounds(geojsonLayer.getBounds())
}
```




```{ojs}
{
  document.querySelector('#stats-denivellation').appendChild(
    rank_ascent(sommets, "denivellation", selectedClimb, lang)
  )
  document.querySelector('#stats-denivellation').appendChild(
    rank_ascent(sommets, "longueur", selectedClimb, lang)
  )

}
```





